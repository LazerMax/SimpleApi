1. Установка .NET 9.0 SDK
Способ 1: Установка через официальный репозиторий (рекомендуется)
bash
# Удаляем старые конфигурации (если были)
sudo rm -f /etc/apt/sources.list.d/microsoft-prod.list

# Добавляем репозиторий Microsoft
curl -L -o packages-microsoft-prod.deb "https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/packages-microsoft-prod.deb"
sudo dpkg -i packages-microsoft-prod.deb
sudo apt update

# Устанавливаем .NET 9.0 SDK
sudo apt install -y dotnet-sdk-9.0

# Проверяем установку
dotnet --info

Способ 2: Установка через скрипт (если первый способ не работает)
bash
# Скачиваем скрипт установки
curl -L https://dot.net/v1/dotnet-install.sh -o dotnet-install.sh
chmod +x dotnet-install.sh

# Устанавливаем .NET 9.0 SDK
./dotnet-install.sh --channel 9.0

# Добавляем в PATH
echo 'export DOTNET_ROOT=$HOME/.dotnet' | sudo tee -a /etc/profile.d/dotnet.sh
echo 'export PATH=$PATH:$HOME/.dotnet:$HOME/.dotnet/tools' | sudo tee -a /etc/profile.d/dotnet.sh
source /etc/profile.d/dotnet.sh

# Создаем симлинк для глобального доступа
sudo ln -s $HOME/.dotnet/dotnet /usr/local/bin/dotnet

# Проверяем
dotnet --list-sdks
2. Клонирование и публикация проекта
bash
# Создаем папку и клонируем репозиторий
mkdir -p ~/app && cd ~/app
git clone https://github.com/LazerMax/SimpleApi.git
cd SimpleApi

# Публикуем проект
sudo mkdir -p /var/www/app
sudo chown -R $USER:$USER /var/www/app
dotnet publish -c Release -o /var/www/app

# Даем права www-data
sudo chown -R www-data:www-data /var/www/app
sudo chmod -R 755 /var/www/app
3. Настройка systemd-сервиса
bash
sudo nano /etc/systemd/system/simpleapi.service
Вставляем конфигурацию:

[Unit]
Description=Simple API Service
After=network.target

[Service]
WorkingDirectory=/var/www/app
ExecStart=/usr/bin/dotnet /var/www/app/SimpleApi.dll --urls "http://*:5000"
Restart=always
RestartSec=10
User=www-data
Group=www-data
Environment=ASPNETCORE_ENVIRONMENT=Production
Environment=DOTNET_ROOT=/usr/share/dotnet

[Install]
WantedBy=multi-user.target
Применяем изменения:

bash
sudo systemctl daemon-reload
sudo systemctl enable simpleapi
sudo systemctl start simpleapi
sudo systemctl status simpleapi  # Проверяем статус
4. Настройка Nginx
bash
# Устанавливаем Nginx
sudo apt install -y nginx

# Удаляем дефолтный конфиг (если есть)
sudo rm -f /etc/nginx/sites-enabled/default

# Создаем новый конфиг
sudo nano /etc/nginx/sites-available/api
Вставляем конфигурацию:

server {
    listen 80;
    server_name _;

    location / {
        proxy_pass http://localhost:5000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
Активируем и перезапускаем Nginx:

bash
sudo ln -s /etc/nginx/sites-available/api /etc/nginx/sites-enabled/
sudo nginx -t && sudo systemctl restart nginx
5. Проверка работы
bash
# Локально
curl http://localhost/api/healthcheck

# Извне (замените SERVER_IP на IP сервера)
curl http://SERVER_IP/api/healthcheck
6. Дополнительные настройки (если нужно)
Открытие портов в firewall (если используется UFW)
bash
sudo ufw allow 80/tcp
sudo ufw allow 5000/tcp
sudo ufw enable
Просмотр логов
bash
# Логи .NET приложения
journalctl -u simpleapi -n 50 --no-pager

# Логи Nginx
sudo tail -f /var/log/nginx/error.log

Вывод команд:
user@LMA:~/app/SimpleApi$ history | grep -E "dotnet|nginx|systemctl|ufw|git"


  GNU nano 7.2                                                 /etc/systemd/system/simpleapi.service
[Unit]
Description=Simple API Service
After=network.target

[Service]
WorkingDirectory=/var/www/app
ExecStart=/usr/bin/dotnet /var/www/app/SimpleApi.dll --urls "http://*:5000"
Restart=always
User=www-data

[Install]
WantedBy=multi-user.target

